@article{_NO_CITEAmazonSimpleStorage,
  title = {Amazon {{Simple Storage Service}} - {{User Guide}}},
  langid = {english},
  file = {C:\Users\liuda\Zotero\storage\K3YQEWRE\Amazon Simple Storage Service - User Guide.pdf}
}

@incollection{cohenIntroductionAgileMethods2004,
  title = {An {{Introduction}} to {{Agile Methods}}},
  booktitle = {Advances in {{Computers}}},
  author = {Cohen, David and Lindvall, Mikael and Costa, Patricia},
  year = {2004},
  volume = {62},
  pages = {1--66},
  publisher = {Elsevier},
  doi = {10.1016/S0065-2458(03)62001-2},
  urldate = {2025-03-23},
  abstract = {Agile Methods are creating a buzz in the software development community, drawing their fair share of advocates and opponents. While some people consider agile methods the best thing that has happened to software development in recent years, other people view them as a backlash to software engineering and compare them to hacking.},
  isbn = {978-0-12-012162-5},
  langid = {english},
  file = {C:\Users\liuda\Zotero\storage\PDKDXHNR\Cohen et al. - 2004 - An Introduction to Agile Methods.pdf}
}

@article{krasnerDescriptionModelViewControllerUser1988,
  title = {A {{Description}} of the {{Model-View-Controller User Interface Paradigm}} in the {{Smalltalk-80 System}}},
  author = {Krasner, Glenn E and Pope, Stephen T and Systems, ParcPlace},
  year = {1988},
  volume = {1},
  number = {3},
  pages = {26--49},
  abstract = {This essay describes the Model-View-Controller (MVC) programming paradigm and methodology used in the Smalltalk-80TM programming system. MVC programming is the application of a three-way factoring, whereby objects of different classes take over the operations related to the application domain, the display of the application's state, and the user interaction with the model and the view. We present several extended examples of MVC implementations and of the layout of composite application views. The Appendices provide reference materials for the Smalltalk-80 programmer wishing to understand and use MVC better within the Smalltalk-80 system.},
  langid = {english},
  file = {C:\Users\liuda\Zotero\storage\LKYMSF6W\Krasner et al. - A Description of the Model-View-Controller User Interface Paradigm in the Smalltalk-80 System.pdf}
}

@article{krishnaSecureFileMulti2011,
  title = {Secure {{File Multi Transfer Protocol Design}}},
  author = {Krishna, Murali and Jamwal, Pradeep and Chaitanya, K. S. R. and Kumar, B. Vinod},
  year = {2011},
  journal = {Journal of Software Engineering and Applications},
  volume = {04},
  number = {05},
  pages = {311--315},
  issn = {1945-3116, 1945-3124},
  doi = {10.4236/jsea.2011.45034},
  urldate = {2025-03-25},
  abstract = {As the internet grows in popularity and therefore also in size more and more transmission takes place mainly because the technology is more readily available and applications have become more user friendly allowing entry to less sophisticated user over a broad spectrum. Most data transfer are mainly text based not secure and vulnerable to various forms of security risks. So the model that uses SSH for securing channel like intranet/internet which provides client authentication encryption and decryption with high degree of security by transferring the data in an encrypted format, up on this model enhances the efficiency of data transmission by encrypting or decrypting the data with AES in Counter Mode. AES is a symmetric key encryption standard. Moreover the permutation controlled by data can be performed at high speed in generic cpu. This scheme also expands the key space without costing more to run. And also finally through the combination of secure shell (ssh) and AES (Counter Mode) not only enhances the security of communication channel. It also provides various applications like remote user creation, remote user deletion, remote command execution, remote system shutdown, remote file transfer applications in a highly secure manner.},
  copyright = {http://creativecommons.org/licenses/by/4.0/},
  langid = {english},
  file = {C:\Users\liuda\Zotero\storage\3Z5FHVAU\Krishna et al. - 2011 - Secure File Multi Transfer Protocol Design.pdf}
}

@article{lingAdversarialAttacksWindows2023,
  title = {Adversarial Attacks against {{Windows PE}} Malware Detection: {{A}} Survey of the State-of-the-Art},
  shorttitle = {Adversarial Attacks against {{Windows PE}} Malware Detection},
  author = {Ling, Xiang and Wu, Lingfei and Zhang, Jiangyu and Qu, Zhenqing and Deng, Wei and Chen, Xiang and Qian, Yaguan and Wu, Chunming and Ji, Shouling and Luo, Tianyue and Wu, Jingzheng and Wu, Yanjun},
  year = {2023},
  month = may,
  journal = {Computers \& Security},
  volume = {128},
  pages = {103134},
  issn = {0167-4048},
  doi = {10.1016/j.cose.2023.103134},
  urldate = {2025-03-27},
  abstract = {Malware has been one of the most damaging threats to computers that span across multiple operating systems and various file formats. To defend against ever-increasing and ever-evolving malware, tremendous efforts have been made to propose a variety of malware detection that attempt to effectively and efficiently detect malware so as to mitigate possible damages as early as possible. Recent studies have shown that, on the one hand, existing machine learning (ML) and deep learning (DL) techniques enable superior solutions in detecting newly emerging and previously unseen malware. However, on the other hand, ML and DL models are inherently vulnerable to adversarial attacks in the form of adversarial examples, which are maliciously generated by slightly and carefully perturbing the legitimate inputs to misbehave. Adversarial attacks are initially studied in the domain of computer vision like image classification, and then quickly extended to other domains, including natural language processing, audio recognition, and even malware detection. In this paper, we focus on malware with the file format of portable executable (PE) in the family of Windows operating systems, namely Windows PE malware, as a representative case to study the adversarial attack methods in such adversarial settings. To be specific, we start by first outlining the general learning framework of Windows PE malware detection based on ML/DL and subsequently highlighting three unique challenges of performing adversarial attacks in the context of Windows PE malware. Then, we conduct a comprehensive and systematic review to categorize the state-of-the-art adversarial attacks against PE malware detection, as well as corresponding defenses to increase the robustness of Windows PE malware detection. Finally, we conclude the paper by first presenting other related attacks against Windows PE malware detection beyond the adversarial attacks and then shedding light on future research directions and opportunities.},
  keywords = {Adversarial attack,Adversarial machine learning,Deep learning,Machine learning,Malware detection,Portable executable},
  file = {C\:\\Users\\liuda\\Zotero\\storage\\H2KQ95VN\\Ling et al. - 2023 - Adversarial attacks against Windows PE malware detection A survey of the state-of-the-art.pdf;C\:\\Users\\liuda\\Zotero\\storage\\T57Y2FIN\\S0167404823000445.html}
}

@misc{MinIOS3Compatible,
  title = {{{MinIO}} {\textbar} {{S3 Compatible Storage}} for {{AI}}},
  journal = {MinIO},
  urldate = {2025-03-25},
  abstract = {MinIO's High Performance Object Storage is Open Source, Amazon S3 compatible, Kubernetes Native and is designed for cloud native workloads like AI.},
  howpublished = {https://min.io},
  langid = {english},
  file = {C:\Users\liuda\Zotero\storage\DA29YT3X\min.io.html}
}
